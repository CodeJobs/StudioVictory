/* Utils */
prefix(property, value)
    -webkit-{property} value
    -moz-{property} value
    -o-{property} value
    -ms-{property} value
    {property} value

bg(color = transparent)
    background color

bgImage(url, repeat = no-repeat)
    background-image url(url)
    background-repeat repeat

blackRgba(opacity = 1)
    background-color rgba(0, 0, 0, opacity)

cover()
    background-size cover

resetElement()
    border none
    margin 0
    padding 0

clearfix()
    *zoom 1
    &:after
        content ''
        display block
        clear both
        height 0

position(position, args...)
    position position

    if length(args) == 4
        if args[0] != false
            top args[0]

        if args[1] != false
            right args[1]

        if args[2] != false
            bottom args[2]

        if args[3] != false
            left args[3]
    else if length(args) == 3
        if args[0] != false
            top args[0]

        if args[1] != false
            right args[1]

        if args[2] != false
            bottom args[2]
    else if length(args) == 2
        if args[0] != false
            top args[0]

        if args[1] != false
            right args[1]
    else
        if args[0] != false
            top args[0]

font(font, size = false)
    font-family font, sans-serif

    if size != false
        font-size size

capitalize()
    text-transform capitalize

uppercase()
    text-transform uppercase

lowercase()
    text-transform lowercase

italic()
    font-style italic

centerImage(width = 100%)
    display block
    margin 0 auto
    width width

centerWithMargin(initMargin = 0, args...)
    margin initMargin auto

    if length(args) == 4
        if args[0] != false
            margin-top args[0]

        if args[1] != false
            margin-right args[1]

        if args[2] != false
            margin-bottom args[2]

        if args[3] != false
            margin-left args[3]
    else if length(args) == 3
        if args[0] != false
            margin-top args[0]

        if args[1] != false
            margin-right args[1]

        if args[2] != false
            margin-bottom args[2]
    else if length(args) == 2
        if args[0] != false
            margin-top args[0]

        if args[1] != false
            margin-right args[1]
    else
        if args[0] != false
            margin-top args[0]

hide()
    display none

noContent()
    content ''
    background transparent

noBorder()
    border none

noDisplay()
    display none

noSelect()
    outline none
    touch-callout none
    user-select none

pointer()
    cursor pointer

/* Font Awesome */
fa(code, size = 1em, color = blueDevWay, bgColor = transparent)
    background-color bgColor
    color color
    content code
    font-family FontAwesome
    font-size size

/* Borders */
border(color = red, size = 1px, type = solid)
    border size type color

borderRadius(radius = 5px, args...)
    if length(args) == 3
        border-top-right-radius radius
        border-bottom-right-radius args[0]
        border-bottom-left-radius args[1]
        border-top-left-radius args[2]
    else if length(args) == 2
        border-top-right-radius radius
        border-bottom-right-radius args[0]
        border-bottom-left-radius args[1]
    else if length(args) == 1
        border-top-right-radius radius
        border-bottom-right-radius args[0]
    else
        border-radius radius

/* BoxShadow */
boxShadow(h = 2px, v = 2px, blur = 2px, opacity = 0.3, inset = false)
    if (!inset)
        box-shadow h v blur rgba(0, 0, 0, opacity)
    else
        box-shadow inset h v blur rgba(0, 0, 0, opacity)

/* Filters */
grayscale(percentage)
    filter grayscale(percentage)
    -webkit-filter grayscale(percentage)
    -o-filter grayscale(percentage)
    -moz-filter grayscale(percentage)
    -ms-filter grayscale(percentage)

grayColor(position)
    return graysColors[position]

/* Lists */
resetUl()
    margin 0
    padding 0
    list-style none

/* Images */
retina(image, extension = 'png')
    background-image url(image'.'extension)

    @media (min-device-pixel-ratio: 2),
           (min-device-pixel-ratio: 2),
           (min-resolution: 192dpi),
           (min-resolution: 2dppx)
        background-image url(image'_@2x.'extension)
        background-size cover
